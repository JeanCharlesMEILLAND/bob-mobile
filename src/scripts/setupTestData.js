// src/scripts/setupTestData.js - Script pour configurer les donn√©es de test dans Strapi
// √Ä ex√©cuter c√¥t√© Strapi pour initialiser les donn√©es de test

const TEST_USER = {
  username: 'bober_testeur',
  email: 'test@bob-app.fr',
  password: 'TestPassword123!',
  confirmed: true,
  blocked: false,
  prenom: 'Bober',
  nom: 'Testeur',
  telephone: '+33612345678',
  bio: 'Je suis le Bober Testeur officiel ! Ami de tous les utilisateurs de Bob pour vos tests.',
  bobizBalance: 1000,
  reputation: 5.0,
  totalExchanges: 50,
  isTestUser: true
};

const MOCK_EXCHANGES = [
  {
    titre: "Perceuse sans fil Makita 18V",
    description: "Perceuse sans fil professionnelle avec 2 batteries, chargeur et coffret de m√®ches. Parfaite pour tous travaux de per√ßage et vissage. √âtat impeccable, peu utilis√©e.",
    type: "pret",
    categorie: "bricolage",
    statut: "en_attente",
    dureeJours: 3,
    conditions: "‚Ä¢ Retour propre et charg√©e\n‚Ä¢ D√©p√¥t de garantie 80‚Ç¨\n‚Ä¢ Disponible d√®s demain\n‚Ä¢ R√©cup√©ration chez moi ou livraison possible",
    bobizRecompense: 15,
    isTestData: true,
    location: "Lyon 3e, Metro Part-Dieu"
  },
  {
    titre: "V√©lo √©lectrique D√©cathlon", 
    description: "V√©lo √©lectrique de ville, autonomie 50km, id√©al pour vos d√©placements urbains. Tr√®s confortable avec selle gel et guidon ajustable.",
    type: "pret",
    categorie: "transport", 
    statut: "actif",
    dureeJours: 7,
    conditions: "‚Ä¢ Casque fourni\n‚Ä¢ Assurance responsabilit√© civile requise\n‚Ä¢ Recharge tous les 2 jours\n‚Ä¢ Interdiction autoroutes",
    bobizRecompense: 25,
    isTestData: true,
    location: "Lyon 6e, Metro Foch"
  },
  {
    titre: "√âchelle t√©lescopique ou √©chafaudage",
    description: "Je cherche une √©chelle t√©lescopique (4-5m) ou petit √©chafaudage pour refaire la peinture de ma fa√ßade. Travaux pr√©vus ce weekend.",
    type: "emprunt",
    categorie: "bricolage",
    statut: "en_attente", 
    dureeJours: 2,
    conditions: "‚Ä¢ Utilisation soigneuse garantie\n‚Ä¢ Assurance habitation couvre\n‚Ä¢ R√©cup√©ration/livraison flexible\n‚Ä¢ Petit d√©dommagement possible",
    bobizRecompense: 10,
    isTestData: true,
    location: "Lyon 7e, Quartier Jean Mac√©"
  },
  {
    titre: "Cours particuliers informatique",
    description: "Prof d'informatique, je propose des cours personnalis√©s : bureautique, programmation, d√©pannage PC/Mac. Tous niveaux, m√©thode adapt√©e.",
    type: "service_offert",
    categorie: "formation",
    statut: "en_attente",
    dureeJours: null,
    conditions: "‚Ä¢ 1√®re s√©ance gratuite\n‚Ä¢ Flexible horaires soir/weekend\n‚Ä¢ Chez vous ou chez moi\n‚Ä¢ Support de cours fourni",
    bobizRecompense: 20,
    isTestData: true,
    location: "Lyon centre, d√©placements possibles"
  },
  {
    titre: "Aide d√©m√©nagement samedi matin", 
    description: "D√©m√©nagement studio Lyon 6e vers Lyon 3e, je cherche 2 personnes motiv√©es pour cartons + quelques meubles. Camion d√©j√† r√©serv√©.",
    type: "service_demande",
    categorie: "transport",
    statut: "en_attente",
    dureeJours: null,
    conditions: "‚Ä¢ Samedi 9h-13h environ\n‚Ä¢ Pizza + boissons offertes\n‚Ä¢ Bonne condition physique\n‚Ä¢ Ambiance sympa garantie",
    bobizRecompense: 30,
    isTestData: true,
    location: "Lyon 6e vers Lyon 3e"
  }
];

/**
 * Instructions pour Strapi :
 * 
 * 1. Cr√©er le Bober Testeur :
 *    - Aller dans Content-Type Builder > User
 *    - Cr√©er un nouvel utilisateur avec les donn√©es TEST_USER
 *    - Noter l'ID g√©n√©r√©
 * 
 * 2. Injecter les √©changes de test :
 *    - Aller dans Content Manager > Echange
 *    - Pour chaque objet dans MOCK_EXCHANGES :
 *      - Cr√©er un nouvel √©change
 *      - Assigner le Bober Testeur comme cr√©ateur
 *      - Copier les donn√©es de l'objet
 * 
 * 3. Alternative - Script Node.js pour automatiser :
 */

// Script d'automatisation pour Strapi (√† ex√©cuter c√¥t√© serveur)
const setupTestData = async () => {
  try {
    // Cr√©er le Bober Testeur
    const testUser = await strapi.plugins['users-permissions'].services.user.add({
      ...TEST_USER,
      provider: 'local',
      role: 1 // ID du r√¥le "Authenticated"
    });

    console.log('‚úÖ Bober Testeur cr√©√©:', testUser.id);

    // Cr√©er les √©changes de test
    let successCount = 0;
    for (const exchangeData of MOCK_EXCHANGES) {
      try {
        const exchange = await strapi.services.echange.create({
          ...exchangeData,
          createur: testUser.id,
          dateCreation: new Date(),
          dateModification: new Date()
        });
        
        console.log(`‚úÖ √âchange cr√©√©: ${exchange.titre}`);
        successCount++;
      } catch (error) {
        console.error(`‚ùå Erreur √©change: ${exchangeData.titre}`, error.message);
      }
    }

    console.log(`\nüéâ Setup termin√©: ${successCount}/${MOCK_EXCHANGES.length} √©changes cr√©√©s`);
    
  } catch (error) {
    console.error('‚ùå Erreur setup:', error);
  }
};

// Export pour utilisation
module.exports = {
  TEST_USER,
  MOCK_EXCHANGES,
  setupTestData
};

/**
 * Commande √† ex√©cuter dans Strapi :
 * 
 * 1. Copier ce fichier dans le dossier Strapi
 * 2. Dans la console Strapi :
 *    const { setupTestData } = require('./setupTestData.js');
 *    setupTestData();
 * 
 * Ou cr√©er une route API temporaire qui appelle setupTestData()
 */